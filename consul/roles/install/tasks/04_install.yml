- name: "Consul Install | Install binary"
  ansible.builtin.apt:
    name: consul
    update_cache: true

- name: "Consul Install | Prevent Consul from being upgraded"
  ansible.builtin.dpkg_selections:
    name: consul
    selection: hold

- name: "Consul Install | Add user consul to group {{ hashistack_group }}"
  ansible.builtin.user:
    name: consul
    groups: consul,{{ hashistack_group }}
    append: true

- name: "Consul Install | Generate Gossip Encryption Key"
  ansible.builtin.command: "openssl rand -base64 32"
  register: consul_encrypt_key_out
  changed_when: consul_encrypt_key_out.rc != 0
  when: consul_encrypt_key is not defined
  run_once: true

- name: "Consul Install | Set Gossip Encryption Key as fact"
  ansible.builtin.set_fact:
    consul_encrypt_key: "{{ consul_encrypt_key_out.stdout }}"
  when: consul_encrypt_key is not defined
  run_once: true

- name: "Consul Install | Insert Consul Encrypt key"
  ansible.builtin.blockinfile:
    path: "{{ hashistack_creds_file }}"
    marker: "#<!-- {mark} CONSUL ENCRYPT KEY ANSIBLE MANAGED BLOCK -->"
    block: |
      consul_encrypt_key: "{{ consul_encrypt_key }}"
    create: true
    mode: "0644"
  delegate_to: localhost
  become: false
  run_once: true

- name: "Consul Install | Save ACL Global Management token"
  ansible.builtin.set_fact:
    consul_global_management_token: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
  when:
    - consul_acl
    - consul_global_management_token is not defined
  run_once: true

- name: "Consul Install | Insert Consul ACL Global Management token"
  ansible.builtin.blockinfile:
    path: "{{ hashistack_creds_file }}"
    marker: "#<!-- {mark} CONSUL ACL GLOBAL MANAGEMENT TOKEN ANSIBLE MANAGED BLOCK -->"
    block: |
      consul_global_management_token: "{{ consul_global_management_token }}"
    create: true
    mode: "0644"
  delegate_to: localhost
  become: false
  run_once: true
  register: consul_global_management_token_inserted
  when: consul_acl

- name: "Consul Install | Save ACL Replication token"
  ansible.builtin.set_fact:
    consul_acl_replication_token: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}"
  when:
    - consul_acl
    - consul_acl_replication_token is not defined
  run_once: true

- name: "Consul Install | Insert Consul ACL Replication token"
  ansible.builtin.blockinfile:
    path: "{{ hashistack_creds_file }}"
    marker: "#<!-- {mark} CONSUL ACL REPLICATION TOKEN ANSIBLE MANAGED BLOCK -->"
    block: |
      consul_acl_replication_token: "{{ consul_acl_replication_token }}"
    create: true
    mode: "0644"
  delegate_to: localhost
  become: false
  run_once: true
  when: consul_acl

- name: "Consul Install | Copy base config file"
  ansible.builtin.template:
    src: "consul.hcl.j2"
    dest: "{{ consul_conf_dir }}/consul.hcl"
    owner: consul
    group: consul
    mode: '0644'
  when: consul_node_role == 'server' or consul_node_role == 'both'

- name: "Consul Install | Copy tls config file"
  ansible.builtin.template:
    src: "tls.hcl.j2"
    dest: "{{ consul_conf_dir }}/tls.hcl"
    owner: consul
    group: consul
    mode: '0644'
  when:
    - consul_tls
    - consul_node_role == 'server' or consul_node_role == 'both'

- name: "Consul | Commons tasks | Create Consul logs directory"
  ansible.builtin.file:
    path: "/var/log/consul"
    state: directory
    mode: '0755'
    owner: "consul"
    group: "consul"

- name: "Consul Install | Start Consul"
  ansible.builtin.systemd_service:
    state: restarted
    name: consul
    enabled: true
    daemon_reload: true
  when:
    - consul_node_role == 'server' or consul_node_role == 'both'
    - consul_global_management_token_inserted.changed

- name: "Consul Install | Wait for Consul restarted"
  ansible.builtin.wait_for:
    host: "{{ consul_install_http_ip }}"
    port: "{{ consul_install_http_port }}"
  when: consul_node_role == 'server' or consul_node_role == 'both'
